#!/usr/bin/perl -w

use strict;

use FindBin;
use Getopt::Long qw( :config pass_through require_order );

sub usage {
    my($status, @msg) = @_;
    my $fh = $status == 0 ? \*STDOUT : \*STDERR;
    print $fh @msg, "\n" if @msg;
    print $fh <<EOF;
Usage:
  rlwrap-jdb [OPT]... [RLWRAP-OPT]... PROG [ARG]...
Run PROG with command-line editing and history as well as handy aliases,
command repetition, and breakpoint completion for jdb.  Note PROG doesn't
have to be jdb; it could be an application startup script, a mvn exec:exe
invocation, etc. that eventually calls jdb.

Options:
  --breakpoints-file F  File containing breakpoints for completion;
                        generate with list-java-breakpoints.

RLWRAP-OPTs must be specified ofter OPTs, and are passed to rlwrap.  Some
rlwrap options are given defaults:
  --command-name jdb
  --break-chars :
  --histsize 5000
EOF
    exit($status);
}

my($breakpoints_file);
GetOptions(
    help            => sub { usage(0) },
    'breakpoints-file:s' => \$breakpoints_file,
) or usage(1);

usage(1, 'PROG required') if @ARGV == 0;

exec(qw( rlwrap --command-name jdb --break-chars : --histsize 5000 --filter ),
    join(' ', "$FindBin::Bin/rlwrap-jdb-filter",
        defined($breakpoints_file) ? $breakpoints_file : ()),
    @ARGV) or die $!;
